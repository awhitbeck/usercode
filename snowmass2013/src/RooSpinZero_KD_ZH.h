/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef ROOSPINZERO_KD_ZH
#define ROOSPINZERO_KD_ZH

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"

 
class RooSpinZero_KD_ZH : public RooAbsPdf {
public:
  RooSpinZero_KD_ZH() {} ; 
  RooSpinZero_KD_ZH(const char *name, const char *title,
		    RooAbsReal& _kd,
		    RooAbsReal& _fa3,
 		    vector<TH1F*>& _histos,
		    bool  _withAcc);
		    
  RooSpinZero_KD_ZH(const RooSpinZero_KD_ZH& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new RooSpinZero_KD_ZH(*this,newname); }
  inline virtual ~RooSpinZero_KD_ZH() { }
  
  Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName=0) const ;
  Double_t analyticalIntegral(Int_t code, const char* rangeName=0) const ;
  	
protected:

  RooRealProxy kd ;
  RooRealProxy fa3 ;
  vector<TH1F*> histos;
  bool withAcc;
    
  Double_t evaluate() const ;

private:

  ClassDef(RooSpinZero_KD_ZH,1) // Your description goes here...
};
 
#endif
