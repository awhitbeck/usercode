/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef ROOSPINZERO_3D_ZH
#define ROOSPINZERO_3D_ZH

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"
 
class RooZZ_3D : public RooAbsPdf {
public:
  RooZZ_3D() {} ; 
  RooZZ_3D(const char *name, const char *title,
		    RooAbsReal& _h1,
		    RooAbsReal& _h2,
		    RooAbsReal& _Phi,
		    RooAbsReal& _h1pol2,
		    RooAbsReal& _h1pol4,
		    RooAbsReal& _h1pol6,
		    RooAbsReal& _h2pol2,
           	    RooAbsReal& _phiconst,
           	    RooAbsReal& _twophiconst,
		    bool  _withAcc);
		    
  RooZZ_3D(const RooZZ_3D& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new RooZZ_3D(*this,newname); }
  inline virtual ~RooZZ_3D() { }
  
  Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName=0) const ;
  Double_t analyticalIntegral(Int_t code, const char* rangeName=0) const ;
  
	
protected:

  RooRealProxy h1 ;
  RooRealProxy h2 ;
  RooRealProxy Phi ;
  RooRealProxy h1pol2;
  RooRealProxy h1pol4;
  RooRealProxy h1pol6;
  RooRealProxy h2pol2;
  RooRealProxy phiconst;
  RooRealProxy twophiconst;
  bool withAcc;
  
    
  Double_t evaluate() const ;

private:

  ClassDef(RooZZ_3D,1) // Your description goes here...
};
 
#endif
